// Copyright (C) 2019 rameshvk. All rights reserved.
// Use of this source code is governed by a MIT-style license
// that can be found in the LICENSE file.
//
// Code generated by github.com/dotchain/fuss/dom/codegen.go. DO NOT EDIT.

package dom_test

import (
	dom "github.com/dotchain/fuss/dom/v2"
)

// newtestElt is the constructor for testEltFunc
func newtestElt() (update testEltFunc, closeAll func()) {
	var refresh func()

	var lastkind string
	var lastresult dom.Element
	var initialized bool
	spanFnMap := map[interface{}]dom.TextViewFunc{}
	spanCloseMap := map[interface{}]func(){}
	spanUsedMap := map[interface{}]bool{}

	runFnMap := map[interface{}]dom.RunFunc{}
	runCloseMap := map[interface{}]func(){}
	runUsedMap := map[interface{}]bool{}

	cLocal := &testeltDep{
		span: func(key interface{}, styles dom.Styles, text string) (result dom.Element) {
			spanUsedMap[key] = true
			if spanFnMap[key] == nil {
				spanFnMap[key], spanCloseMap[key] = dom.NewTextView()
			}
			return spanFnMap[key](key, styles, text)
		},

		run: func(key interface{}, styles dom.Styles, cells ...dom.Element) (result dom.Element) {
			runUsedMap[key] = true
			if runFnMap[key] == nil {
				runFnMap[key], runCloseMap[key] = dom.NewRun()
			}
			return runFnMap[key](key, styles, cells...)
		},
	}

	close := func() {
		for key := range spanCloseMap {
			if !spanUsedMap[key] {
				spanCloseMap[key]()
				delete(spanCloseMap, key)
				delete(spanFnMap, key)
			}
		}
		spanUsedMap = map[interface{}]bool{}

		for key := range runCloseMap {
			if !runUsedMap[key] {
				runCloseMap[key]()
				delete(runCloseMap, key)
				delete(runFnMap, key)
			}
		}
		runUsedMap = map[interface{}]bool{}
	}

	closeAll = func() {
		close()

	}

	update = func(c interface{}, kind string) (result dom.Element) {
		refresh = func() {

			lastresult = testElt(cLocal, kind)

			close()
		}

		if initialized {
			switch {

			case lastkind != kind:
			default:

				return lastresult
			}
		}
		initialized = true
		lastkind = kind
		refresh()
		return lastresult
	}

	return update, closeAll
}
